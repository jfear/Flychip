
package MyElements::compare_graphs;
use strict;
use warnings;

{ # BLOCK to scope variables

sub get_xmlns { 'urn:RSATWS' }

__PACKAGE__->__set_name('compare_graphs');
__PACKAGE__->__set_nillable();
__PACKAGE__->__set_minOccurs();
__PACKAGE__->__set_maxOccurs();
__PACKAGE__->__set_ref();

use base qw(
    SOAP::WSDL::XSD::Typelib::Element
    SOAP::WSDL::XSD::Typelib::ComplexType
);

our $XML_ATTRIBUTE_CLASS;
undef $XML_ATTRIBUTE_CLASS;

sub __get_attr_class {
    return $XML_ATTRIBUTE_CLASS;
}

use Class::Std::Fast::Storable constructor => 'none';
use base qw(SOAP::WSDL::XSD::Typelib::ComplexType);

Class::Std::initialize();

{ # BLOCK to scope variables

my %request_of :ATTR(:get<request>);

__PACKAGE__->_factory(
    [ qw(        request

    ) ],
    {
        'request' => \%request_of,
    },
    {
        'request' => 'MyTypes::CompareGraphsRequest',
    },
    {

        'request' => 'request',
    }
);

} # end BLOCK






} # end of BLOCK



1;


=pod

=head1 NAME

MyElements::compare_graphs

=head1 DESCRIPTION

Perl data type class for the XML Schema defined element
compare_graphs from the namespace urn:RSATWS.





=head1 METHODS

=head2 new

 my $element = MyElements::compare_graphs->new($data);

Constructor. The following data structure may be passed to new():

 {
   request =>  { # MyTypes::CompareGraphsRequest
     output =>  $some_value, # string
     Qinformat =>  $some_value, # string
     Rinformat =>  $some_value, # string
     outformat =>  $some_value, # string
     outweight =>  $some_value, # string
     Rinputgraph =>  $some_value, # string
     Qinputgraph =>  $some_value, # string
     Qwcol =>  $some_value, # int
     Qscol =>  $some_value, # int
     Qtcol =>  $some_value, # int
     Rwcol =>  $some_value, # int
     Rscol =>  $some_value, # int
     Rtcol =>  $some_value, # int
     return =>  $some_value, # string
     directed =>  $some_value, # int
     self =>  $some_value, # int
   },
 },

=head1 AUTHOR

Generated by SOAP::WSDL

=cut

